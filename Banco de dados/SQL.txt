-- Configura o delimitador para o uso de triggers e eventos
DELIMITER $$

CREATE TABLE Cliente (
    id INT PRIMARY KEY AUTO_INCREMENT,
    nome VARCHAR(50),
    email VARCHAR(50),
    cpf VARCHAR(50),
    senha VARCHAR(50)
)$$

CREATE TABLE Carro (
    id INT PRIMARY KEY AUTO_INCREMENT,
    marca VARCHAR(50),
    modelo VARCHAR(50),
    ano VARCHAR(50),
    quantidade INT,
    valor_diaria DECIMAL(10, 2) NOT NULL, -- Nova coluna adicionada
    foto BLOB
)$$

CREATE TABLE Agenda (
    id INT PRIMARY KEY AUTO_INCREMENT,
    data_inicio DATE,
    data_fim DATE,
    valor VARCHAR(50),
    FK_Carro_id INT,
    status VARCHAR(50),
    FOREIGN KEY (FK_Carro_id)
        REFERENCES Carro (id)
        ON DELETE RESTRICT ON UPDATE RESTRICT
)$$

CREATE TABLE Administrador (
    id INT PRIMARY KEY AUTO_INCREMENT,
    nome VARCHAR(50),
    email VARCHAR(50),
    senha VARCHAR(50)
)$$

CREATE TABLE cliente_agenda (
    FK_Cliente_id INT,
    FK_Agenda_id INT,
    FOREIGN KEY (FK_Cliente_id)
        REFERENCES Cliente (id)
        ON DELETE RESTRICT ON UPDATE RESTRICT,
    FOREIGN KEY (FK_Agenda_id)
        REFERENCES Agenda (id)
        ON DELETE RESTRICT ON UPDATE RESTRICT
)$$

-- Triggers

CREATE TRIGGER AtualizaStatusAgenda
BEFORE INSERT ON Agenda
FOR EACH ROW
BEGIN
    IF NEW.data_fim < CURDATE() THEN
        SET NEW.status = 'finalizado';
    ELSEIF NEW.data_inicio <= CURDATE() AND NEW.data_fim >= CURDATE() THEN
        SET NEW.status = 'em andamento';
    ELSE
        SET NEW.status = 'não iniciado';
    END IF;
END$$

CREATE TRIGGER ReduzEstoqueCarro
AFTER INSERT ON Agenda
FOR EACH ROW
BEGIN
    IF (SELECT quantidade FROM Carro WHERE id = NEW.FK_Carro_id) > 0 THEN
        UPDATE Carro
        SET quantidade = quantidade - 1
        WHERE id = NEW.FK_Carro_id;
    ELSE
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Estoque insuficiente para o carro solicitado.';
    END IF;
END$$

CREATE TRIGGER RestauraEstoqueCarro
AFTER UPDATE ON Agenda
FOR EACH ROW
BEGIN
    IF NEW.status = 'finalizado' AND OLD.status != 'finalizado' THEN
        UPDATE Carro
        SET quantidade = quantidade + 1
        WHERE id = NEW.FK_Carro_id;
    END IF;
END$$

-- Evento para atualizar o status das agendas automaticamente todos os dias
CREATE EVENT AtualizaStatusAgendaEvent
ON SCHEDULE EVERY 1 DAY
DO
BEGIN
    UPDATE Agenda
    SET status = CASE
        WHEN data_fim < CURDATE() THEN 'finalizado'
        WHEN data_inicio <= CURDATE() AND data_fim >= CURDATE() THEN 'em andamento'
        ELSE 'não iniciado'
    END
    WHERE status != 'finalizado';
END$$

-- Volta ao delimitador padrão
DELIMITER ;
